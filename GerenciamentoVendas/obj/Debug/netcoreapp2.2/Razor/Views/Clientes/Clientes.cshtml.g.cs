#pragma checksum "C:\Users\iagol\Desktop\GerenciamentoVendasAtualizado\GerenciadorDeVendas\GerenciamentoVendas\Views\Clientes\Clientes.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "206cbbfb4f424fbc787c085468081f21f48da9e6"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Clientes_Clientes), @"mvc.1.0.view", @"/Views/Clientes/Clientes.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Clientes/Clientes.cshtml", typeof(AspNetCore.Views_Clientes_Clientes))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"206cbbfb4f424fbc787c085468081f21f48da9e6", @"/Views/Clientes/Clientes.cshtml")]
    public class Views_Clientes_Clientes : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 40, true);
            WriteLiteral("<!DOCTYPE html>\r\n<html lang=\"pt-br\">\r\n\r\n");
            EndContext();
            BeginContext(40, 2062, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "206cbbfb4f424fbc787c085468081f21f48da9e63071", async() => {
                BeginContext(46, 2049, true);
                WriteLiteral(@"
    <meta charset=""UTF-8"">
    <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <!-- CSS only -->
    <link href=""https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css"" rel=""stylesheet"" integrity=""sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx"" crossorigin=""anonymous"">
    <!-- JavaScript Bundle with Popper -->
    <script src=""https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.bundle.min.js"" integrity=""sha384-A3rJD856KowSb7dwlZdYEkO39Gagi7vIsF0jrRAoQmDKKtQBHUuLZ9AsSv4jD4Xa"" crossorigin=""anonymous""></script>
    <title>Gerenciador Vendas</title>
    <link rel=""stylesheet"" href=""./css/style.css"">
    <style>

        body {
            background-color: #f7f7f7;
        }

        .tabelas {
            margin-top: 3px;
            text-align: center;
            padding: 0px;
        }

        #cadastro {
            border: solid 1px gray;
      ");
                WriteLiteral(@"      padding: 40px;
            background: #d3d3d3;
        }

        .form {
            margin-top: 30px;
        }

        /* HEADER */

        #header {
            text-align: center;
            padding: 20px;
            border-bottom: 1px solid #ccc;
        }

            #header p {
                margin-bottom: 0;
            }

        /* NAVBAR */

        #navbar {
            padding: 10px;
            margin: 10px auto;
        }

            #navbar a {
                width: 150px;
                color: #444;
                text-align: center;
                border: 1px solid #ccc;
                border-radius: 5px;
                margin: 5px;
            }

                #navbar a:hover {
                    color: goldenrod;
                    background-color: beige;
                }

        a.disabled {
            pointer-events: none;
            cursor: default;
            background-color: #d3d3d3;
        }
    </style>");
                WriteLiteral("\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2102, 8, true);
            WriteLiteral("\r\n\r\n\r\n\r\n");
            EndContext();
            BeginContext(2110, 5522, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "206cbbfb4f424fbc787c085468081f21f48da9e66415", async() => {
                BeginContext(2116, 5509, true);
                WriteLiteral(@"
    <!-- HEADER -->
    <div class=""container-fluid"">
        <header class=""row"" id=""header"">
            <h3 class=""text-success"">Cadastro Clientes</h3>
        </header>
        <nav id=""navbar"" class=""container"">
            <div class=""row justify-content-center"">
                <a href=""/api/Usuario/Usuarios?#"">Usuários</a>
                <a href=""/api/ClientePessoaJuridica/Clientes?#"" class=""disabled"">Clientes</a>
                <a href=""#"">Oportunidades</a>
            </div>
        </nav>
    </div>

    <div class=""container"">
        <div class=""row"">
            <div class=""row"">
                <form class=""form"" id=""cadastro"">
                    <div class=""row"">
                        <div class=""col form-group m-2"">
                            <label for=""cnpj"">CNPJ</label>
                            <input type=""text"" class=""form-control"" id=""cnpj"">
                        </div>
                        <div class=""col form-group m-2"">
                        ");
                WriteLiteral(@"    <label for=""nome"">Nome</label>
                            <input type=""text"" class=""form-control"" id=""nome"">
                        </div>
                        <div class=""col form-group m-2"">
                            <label for=""valor"">Valor Monetário</label>
                            <input type=""number"" class=""form-control"" id=""valor"">
                        </div>
                    </div>
                    <div class=""row"">
                        <div class=""col-md-1 offset-md-11"">
                            <button onclick=""Gravar()"" style=""text-align:center"" class=""btn btn-success gravarUsuario"">Gravar</button>
                        </div>
                    </div>
                </form>
            </div>
            <div class=""row"">
                <div class=""tabelas"">
                    <table class=""table table-dark table-striped table-bordered"">
                        <thead>
                            <tr>
                                <th>Id</th");
                WriteLiteral(@">
                                <th>Nome</th>
                                <th>Cnpj</th>
                                <th>Razão Social</th>
                                <th>Valor Monetário</th>
                                <th>Atividades</th>
                                <th>Usuário Responsável</th>
                            </tr>
                        </thead>
                        <tbody id=""tableDadosClientes"">
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

    </div>

    <script src=""https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js""></script>
    <script src=""https://unpkg.com/axios/dist/axios.min.js""></script>
    <script>

        async function Gravar() {
            debugger;
            const url = ""/api/ClientePessoaJuridica"";

            let cnpj = document.getElementById('cnpj');
            let nome = document.getElementById('nome');
            let valor =");
                WriteLiteral(@" document.getElementById('valor');
            valor.value.replace("","", ""."");

            if (cnpj.value == """" || nome.value == """" || valor.value == """") {
                alert(""Preencher todos os dados, para o Cliente!"");
                return
            }

            await axios.post(url, { cnpj: cnpj.value, nome: nome.value, valorMonetario: valor.value })
                .then(function (result) {
                    alert('Success');
                    limpar(cnpj, nome, valor);
                    init();
                })
                .catch(function (error) {
                    if (error.response) {
                        alert(error.response.data);
                    }
                });;
        }

        function limpar(cnpj, nome, valor) {
            cnpj.value = """";
            nome.value = """";
            valor.value = """";
        }

        async function init() {
            //Clientes cadastrados
            $('#tableDadosClientes').empty();
        ");
                WriteLiteral(@"    const dadosClientes = await BuscarClientes();
            MontarTabelaClientes(dadosClientes);
        }

        //Clientes cadastrados
        async function BuscarClientes() {
            const url = ""/api/ClientePessoaJuridica"";
            const dados = await axios.get(url).then(result => {
                console.log(result.data);
                return result.data;
            });

            return dados;
        }

        function MontarTabelaClientes(dadosClientes) {
            const tabelas = document.getElementById(""tableDadosClientes"");

            for (var i = 0; i < dadosClientes.length; i++) {
                const tr = document.createElement('tr');

                let array = [
                    dadosClientes[i].id,
                    dadosClientes[i].nome,
                    dadosClientes[i].cnpj,
                    dadosClientes[i].razaoSocial,
                    dadosClientes[i].valorMonetario,
                    dadosClientes[i].atividades,
    ");
                WriteLiteral(@"                dadosClientes[i].usuario.nome,
                ];

                array.forEach(function (valor) {
                    const td = document.createElement('td');
                    td.innerHTML = valor;
                    tr.appendChild(td)
                });

                tabelas.appendChild(tr)
            }

        }
        init();
    </script>
");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(7632, 13, true);
            WriteLiteral("\r\n\r\n</html>\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
